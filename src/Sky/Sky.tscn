[gd_scene load_steps=7 format=2]

[ext_resource path="res://src/Sky/Sky.shader" type="Shader" id=3]
[ext_resource path="res://src/Sky/noise.png" type="Texture" id=4]
[ext_resource path="res://src/default_env.tres" type="Environment" id=6]

[sub_resource type="GDScript" id=1]
script/source = "extends Spatial

var iTime: float=0.0
var sun_light :Color = Color(1.0,1.0,1.0,1.0)
var moon_light :Color = Color(0.6,0.6,0.8,1.0)
var sunset_light :Color = Color(1.0,0.7,0.55,1.0)
var light_color :Color = Color(1.0,1.0,1.0,1.0)
var light_energy: float = 0.05
var sun_pos: Vector3
var moon_pos: Vector3
var lighting_pos: Vector3=Vector3(0.0,1.0,1.0)
var wind_dir: Vector2=Vector2(1.0,0.0)
var lighting_strike: bool = false
var lighting_stength: float = 0.0;
var time_off_day: float = 0.0 #from 0 to 1
var coverage: float = 0.5

func _ready():
	$Env.environment.background_sky.set_panorama($sky_viewport.get_texture())
	_DAY_TIME_changed(time_off_day)
	
func _process(delta):
	iTime+=delta
	$sky_viewport/sky_texture.material.set(\"shader_param/iTime\",iTime)
	if (lighting_strike):
		var lighting_stength = clamp(sin(iTime*31.4),0.1,1.0)
		lighting_pos = lighting_pos.normalized()
		$Sun_Moon.look_at_from_position(lighting_pos,Vector3.ZERO,Vector3.UP);
		$Sun_Moon.light_color = sun_light
		$Sun_Moon.light_energy = lighting_stength*2
		$sky_viewport/sky_texture.material.set(\"shader_param/LIGHTTING_POS\",lighting_pos);
		$sky_viewport/sky_texture.material.set(\"shader_param/LIGHTING_STRENGTH\",Vector3(lighting_stength,lighting_stength,lighting_stength));
		
func _height_chg(value):
	$sky_viewport/sky_texture.material.set(\"shader_param/HEIGHT\",value)
	
func _cov_scb(value):
	coverage = value
	$sky_viewport/sky_texture.material.set(\"shader_param/COVERAGE\",coverage)
	$sky_viewport/sky_texture.material.set(\"shader_param/ABSORPTION\",coverage+0.75)
	$sky_viewport/sky_texture.material.set(\"shader_param/THICKNESS\",coverage*10+10)
	_DAY_TIME_changed(time_off_day)

func _quality_scb(value):
	$sky_viewport/sky_texture.material.set(\"shader_param/STEPS\",clamp (value,2,100))

func _wind(value):
	$sky_viewport/sky_texture.material.set(\"shader_param/WIND\",Vector3(wind_dir.x,0.0,wind_dir.y).normalized()*value)

func _lighting_on():
	lighting_strike = true

func _lighting_off():
	lighting_strike = false
	$sky_viewport/sky_texture.material.set(\"shader_param/LIGHTING_STRENGTH\",Vector3(0.0,0.0,0.0));
	_DAY_TIME_changed(time_off_day)
	
func _DAY_TIME_changed(value):
	time_off_day = value;
	var day_time: Vector2 = Vector2()
	day_time.x = floor(time_off_day/0.0835) #Период дня
	day_time.y = clamp(fmod(time_off_day,0.0835)*12.0,0.01,0.99); #Время в периоде в диапазоне от 0 до 1.
	var phi: float =0.0;
	phi = ((day_time.x-1.0) *30.0+day_time.y *30.0)*0.0174533
	sun_pos = Vector3(0.0,-1.0,0.0).normalized().rotated(Vector3(1.0,0.0,0.0).normalized(),phi) #тут можно изменять положение Солнца и вокруг какой оси его крутить.
	moon_pos = Vector3(0.0,1.0,0.0).normalized().rotated(Vector3(1.0,0.0,0.0).normalized(),phi)
	$sky_viewport/sky_texture.material.set(\"shader_param/SUN_POS\",sun_pos)
	$sky_viewport/sky_texture.material.set(\"shader_param/MOON_POS\",moon_pos)
	var temp: float =0.0
	if (day_time.x == 0.0 or day_time.x == 1.0 or day_time.x == 2.0 or day_time.x == 11.0):
		temp = 0.0 #ночь
		$Sun_Moon.look_at_from_position(moon_pos,Vector3.ZERO,Vector3.UP);
		light_energy = 0.05
		light_color = moon_light
	if (day_time.x == 3.0):
		temp = 1.0 #от ночи к рассвету
		$Sun_Moon.look_at_from_position(sun_pos,Vector3.ZERO,Vector3.UP);
		light_energy=clamp(day_time.y/2,0.05,0.5)
		light_color=lerp(moon_light,sunset_light,light_energy*2.0)
	if (day_time.x == 4.0):
		temp = 2.0 #от рассвета к дню
		$Sun_Moon.look_at_from_position(sun_pos,Vector3.ZERO,Vector3.UP);
		light_energy=clamp(0.5+day_time.y/2,0.5,1.0)
		light_color=lerp(sunset_light,sun_light,light_energy*2.0 -1.0)
	if (day_time.x == 5.0 or day_time.x == 6.0 or day_time.x == 7.0 or day_time.x == 8.0):
		temp = 3.0 #день
		$Sun_Moon.look_at_from_position(sun_pos,Vector3.ZERO,Vector3.UP);
		light_energy =1.0
	if (day_time.x == 9.0):
		temp = 4.0 #от дня к закату
		$Sun_Moon.look_at_from_position(sun_pos,Vector3.ZERO,Vector3.UP);
		light_energy=clamp(1.0-day_time.y/2,0.5,1.0)
		light_color=lerp(sunset_light,sun_light,light_energy*2.0 -1.0)
	if (day_time.x == 10.0):
		temp = 5.0 #от заката к ночи
		$Sun_Moon.look_at_from_position(sun_pos,Vector3.ZERO,Vector3.UP);
		light_energy=clamp(0.5-day_time.y/2,0.05,0.5)
		light_color=lerp(moon_light, sunset_light,light_energy*2.0)
	day_time.x = temp;
	#print (day_time)
	
	$sky_viewport/sky_texture.material.set(\"shader_param/DAY_TIME\",day_time)
	light_energy = light_energy *(1-coverage*0.5)
	$Sun_Moon.light_energy = light_energy
	$Sun_Moon.light_color = light_color
	$Env.environment.ambient_light_energy = light_energy
	$Env.environment.ambient_light_color = light_color
	$Env.environment.adjustment_saturation = 1-coverage*0.5


func _moon(value):
	$sky_viewport/sky_texture.material.set(\"shader_param/MOON_PHASE\",value)
"

[sub_resource type="ShaderMaterial" id=2]
shader = ExtResource( 3 )
shader_param/iTime = null
shader_param/WIND = Vector3( 0, 0, 0.1 )
shader_param/DAY_TIME = null
shader_param/SUN_POS = null
shader_param/MOON_POS = null
shader_param/MOON_PHASE = -0.2
shader_param/COVERAGE = 0.5
shader_param/HEIGHT = 0.35
shader_param/THICKNESS = 25.0
shader_param/ABSORPTION = 1.0
shader_param/STEPS = 25
shader_param/LIGHTING_STRENGTH = null
shader_param/LIGHTTING_POS = null
shader_param/night_color_sky = null
shader_param/sunset_color_sky = Color( 0.176471, 0.713726, 0.8, 1 )
shader_param/sunset_color_horizon = Color( 0.94902, 0.458824, 0.027451, 1 )
shader_param/day_color_sky = Color( 0.054902, 0.0509804, 0.466667, 1 )
shader_param/day_color_horizon = Color( 0.113725, 0.682353, 0.756863, 1 )
shader_param/sun_color = Color( 0.768627, 0.607843, 0.352941, 1 )
shader_param/moon_color = Color( 0.843137, 0.807843, 0.588235, 1 )
shader_param/Noise = ExtResource( 4 )

[sub_resource type="ImageTexture" id=3]
size = Vector2( 1280, 720 )

[node name="Sky" type="Spatial"]
script = SubResource( 1 )

[node name="Env" type="WorldEnvironment" parent="."]
environment = ExtResource( 6 )

[node name="sky_viewport" type="Viewport" parent="."]
size = Vector2( 1280, 720 )
render_target_update_mode = 3

[node name="sky_texture" type="Sprite" parent="sky_viewport"]
material = SubResource( 2 )
texture = SubResource( 3 )
centered = false

[node name="Sun_Moon" type="DirectionalLight" parent="."]
transform = Transform( 1, 0, 0, 0, -1.62921e-07, -1, 0, 1, -1.62921e-07, 0, -1, 0 )
shadow_enabled = true
shadow_color = Color( 0.3, 0.3, 0.3, 1 )
directional_shadow_depth_range = 1

[node name="Control" type="Control" parent="."]
margin_right = 40.0
margin_bottom = 40.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="Control"]
margin_left = 14.5021
margin_top = 363.368
margin_right = 257.503
margin_bottom = 377.368
text = "Control: Press G and move sliders."
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label2" type="Label" parent="Control"]
margin_left = 15.5002
margin_top = 448.335
margin_right = 64.5002
margin_bottom = 462.335
custom_colors/font_color = Color( 1, 1, 1, 1 )
text = "HEIGHT"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HScrollBar" type="HScrollBar" parent="Control/Label2"]
margin_left = 5.0
margin_top = 16.0
margin_right = 142.0
margin_bottom = 28.0
max_value = 1.0
value = 0.35
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label3" type="Label" parent="Control"]
margin_left = 14.2347
margin_top = 415.311
margin_right = 82.2347
margin_bottom = 429.311
text = "COVERAGE"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HScrollBar" type="HScrollBar" parent="Control/Label3"]
margin_left = 5.0
margin_top = 17.2915
margin_right = 145.0
margin_bottom = 30.2915
max_value = 1.0
value = 0.5
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label6" type="Label" parent="Control"]
margin_left = 14.3768
margin_top = 481.196
margin_right = 149.377
margin_bottom = 495.196
text = "Quality STEPS (1-100)"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HScrollBar" type="HScrollBar" parent="Control/Label6"]
margin_left = 5.0
margin_top = 16.2108
margin_right = 145.0
margin_bottom = 28.2108
step = 1.0
value = 25.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label7" type="Label" parent="Control"]
margin_left = 13.9099
margin_top = 582.77
margin_right = 81.91
margin_bottom = 596.77
text = "DAY_TIME"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HScrollBar" type="HScrollBar" parent="Control/Label7"]
margin_left = 5.0
margin_top = 17.0
margin_right = 1242.0
margin_bottom = 29.0
max_value = 1.0
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label8" type="Label" parent="Control"]
margin_left = 14.9356
margin_top = 513.504
margin_right = 103.936
margin_bottom = 527.504
text = "wind_strength"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="HScrollBar" type="HScrollBar" parent="Control/Label8"]
margin_left = 5.0
margin_top = 17.2915
margin_right = 145.0
margin_bottom = 30.2915
max_value = 1.0
value = 0.1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Button" type="Button" parent="Control"]
margin_left = 22.8748
margin_top = 550.462
margin_right = 155.875
margin_bottom = 570.462
text = "lighting stirke"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label4" type="Label" parent="Control"]
margin_left = 22.1606
margin_top = 384.487
margin_right = 100.161
margin_bottom = 398.487
text = "Moon Phase"

[node name="HScrollBar" type="HScrollBar" parent="Control/Label4"]
margin_left = -1.95068
margin_top = 17.8521
margin_right = 135.049
margin_bottom = 29.8521
min_value = -0.2
max_value = 0.2
value = -0.2
[connection signal="value_changed" from="Control/Label2/HScrollBar" to="." method="_height_chg"]
[connection signal="value_changed" from="Control/Label3/HScrollBar" to="." method="_cov_scb"]
[connection signal="value_changed" from="Control/Label6/HScrollBar" to="." method="_quality_scb"]
[connection signal="value_changed" from="Control/Label7/HScrollBar" to="." method="_DAY_TIME_changed"]
[connection signal="value_changed" from="Control/Label8/HScrollBar" to="." method="_wind"]
[connection signal="button_down" from="Control/Button" to="." method="_lighting_on"]
[connection signal="button_up" from="Control/Button" to="." method="_lighting_off"]
[connection signal="value_changed" from="Control/Label4/HScrollBar" to="." method="_moon"]
